{"ast":null,"code":"var _jsxFileName = \"/home/hemilrajpura/React Training - Dec 2021/Course 9 -React Course/10-onwards-to-a-more-realistic-example/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hook/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /*  const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState(null); */\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchTasks\n  } = useHttp();\n  const [tasks, setTasks] = useState([]);\n  /*  const fetchTasks = async (taskText) => {\n     setIsLoading(true);\n     setError(null);\n     try {\n       const response = await fetch(\n         'https://react-http-63166-default-rtdb.firebaseio.com/tasks.json'\n       );\n        if (!response.ok) {\n         throw new Error('Request failed!');\n       }\n        const data = await response.json();\n        const loadedTasks = [];\n        for (const taskKey in data) {\n         loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n       }\n        setTasks(loadedTasks);\n     } catch (err) {\n       setError(err.message || 'Something went wrong!');\n     }\n     setIsLoading(false);\n   }; */\n\n  useEffect(() => {\n    const transformTasks = taskObj => {\n      const loadedTasks = [];\n\n      for (const taskKey in taskObj) {\n        loadedTasks.push({\n          id: taskKey,\n          text: taskObj[taskKey].text\n        });\n      }\n\n      setTasks(loadedTasks);\n    };\n\n    fetchTasks({\n      url: 'https://react-http-63166-default-rtdb.firebaseio.com/tasks.json'\n    }, transformTasks);\n  }, [fetchTasks]);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lKooy2LfMFM6t6D0Xc+QM6+5m0s=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hemilrajpura/React Training - Dec 2021/Course 9 -React Course/10-onwards-to-a-more-realistic-example/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useHttp","App","isLoading","error","sendRequest","fetchTasks","tasks","setTasks","transformTasks","taskObj","loadedTasks","taskKey","push","id","text","url","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACF;AAEE,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAACC;AAAhC,MAA+CL,OAAO,EAA5D;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOED,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMY,cAAc,GAAKC,OAAD,IAAa;AACnC,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,OAAX,IAAsBF,OAAtB,EAA+B;AAC7BC,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,UAAAA,EAAE,EAAEF,OAAN;AAAeG,UAAAA,IAAI,EAAEL,OAAO,CAACE,OAAD,CAAP,CAAiBG;AAAtC,SAAjB;AACD;;AAEDP,MAAAA,QAAQ,CAACG,WAAD,CAAR;AACD,KARD;;AAUAL,IAAAA,UAAU,CAAC;AAAEU,MAAAA,GAAG,EAAE;AAAP,KAAD,EAA2EP,cAA3E,CAAV;AACD,GAbQ,EAaN,CAACH,UAAD,CAbM,CAAT;;AAeA,QAAMW,cAAc,GAAIC,IAAD,IAAU;AAC/BV,IAAAA,QAAQ,CAAEW,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEV,KADT;AAEE,MAAA,OAAO,EAAEJ,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhEQJ,G;UAI8CD,O;;;KAJ9CC,G;AAkET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hook/use-http';\n\nfunction App() {\n  /*  const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState(null); */\n\n  const { isLoading, error, sendRequest:fetchTasks } = useHttp();\n  const [tasks, setTasks] = useState([]);\n\n /*  const fetchTasks = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://react-http-63166-default-rtdb.firebaseio.com/tasks.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }; */\n\n  useEffect(() => {\n\n    const transformTasks = ((taskObj) => {\n      const loadedTasks = [];\n  \n      for (const taskKey in taskObj) {\n        loadedTasks.push({ id: taskKey, text: taskObj[taskKey].text });\n      }\n  \n      setTasks(loadedTasks);\n    });\n\n    fetchTasks({ url: 'https://react-http-63166-default-rtdb.firebaseio.com/tasks.json'},transformTasks);\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}