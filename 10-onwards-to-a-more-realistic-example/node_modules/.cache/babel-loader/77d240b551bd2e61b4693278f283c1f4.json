{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\n\nconst useHttp = applyData => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const sendRequest = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url\n      /* 'https://react-http-63166-default-rtdb.firebaseio.com/tasks.json' */\n      , {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      const loadedTasks = [];\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  }, [applyData]);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"IZqqqWz/V3ktvStrxnSDjvHn4ZM=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/home/hemilrajpura/React Training - Dec 2021/Course 9 -React Course/10-onwards-to-a-more-realistic-example/src/hook/use-http.js"],"names":["useCallback","useState","useHttp","applyData","isLoading","setIsLoading","error","setError","tasks","setTasks","sendRequest","requestConfig","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","loadedTasks","err","message"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,MAAMC,OAAO,GAAIC,SAAD,IAAc;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMS,WAAW,GAAGV,WAAW,CAAC,MAAOW,aAAP,IAAyB;AACvDN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC3BF,aAAa,CAACG;AAAI;AADS,QAC+D;AACvFC,QAAAA,MAAM,EAAEJ,aAAa,CAACI,MAAd,GAAqBJ,aAAa,CAACI,MAAnC,GAA0C,KADqC;AAEvFC,QAAAA,OAAO,EAAEL,aAAa,CAACK,OAAd,GAAsBL,aAAa,CAACK,OAApC,GAA4C,EAFkC;AAGvFC,QAAAA,IAAI,EAAEN,aAAa,CAACM,IAAd,GAAmBC,IAAI,CAACC,SAAL,CAAeR,aAAa,CAACM,IAA7B,CAAnB,GAAsD;AAH2B,OAD/D,CAA5B;;AAQA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAG,EAApB;AAEHrB,MAAAA,SAAS,CAACmB,IAAD,CAAT;AACE,KAlBD,CAkBE,OAAOG,GAAP,EAAY;AACZlB,MAAAA,QAAQ,CAACkB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDrB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAzB8B,EAyB7B,CAACF,SAAD,CAzB6B,CAA/B;AA2BA,SAAO;AACHC,IAAAA,SADG;AAEHE,IAAAA,KAFG;AAGHI,IAAAA;AAHG,GAAP;AAMH,CAvCD;;GAAMR,O;;AA0CN,eAAeA,OAAf","sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = (applyData) =>{\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [tasks, setTasks] = useState([]);\n  \n    const sendRequest = useCallback(async (requestConfig) => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(\n         requestConfig.url /* 'https://react-http-63166-default-rtdb.firebaseio.com/tasks.json' */,{\n            method: requestConfig.method?requestConfig.method:'GET',\n            headers: requestConfig.headers?requestConfig.headers:{},\n            body: requestConfig.body?JSON.stringify(requestConfig.body):null,\n         }\n        );\n  \n        if (!response.ok) {\n          throw new Error('Request failed!');\n        }\n  \n        const data = await response.json();\n  \n        const loadedTasks = [];\n  \n     applyData(data); \n      } catch (err) {\n        setError(err.message || 'Something went wrong!');\n      }\n      setIsLoading(false);\n    },[applyData]);\n\n    return {\n        isLoading,\n        error,\n        sendRequest,\n\n    }\n};\n\n\nexport default useHttp;"]},"metadata":{},"sourceType":"module"}