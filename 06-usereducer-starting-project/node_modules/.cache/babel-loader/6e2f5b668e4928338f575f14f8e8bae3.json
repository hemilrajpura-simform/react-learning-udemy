{"ast":null,"code":"var _jsxFileName = \"/home/hemilrajpura/React Training - Dec 2021/Course 9 -React Course/06-usereducer-starting-project/src/components/store/auth.context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = () => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn');\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: prompt.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/hemilrajpura/React Training - Dec 2021/Course 9 -React Course/06-usereducer-starting-project/src/components/store/auth.context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","setIsLoggedIn","logoutHandler","localStorage","removeItem","loginHandler","prompt","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,UAAU,EAAE,KADwB;AAEpCC,EAAAA,QAAQ,EAAE,MAAM,CAAG,CAFiB;AAGpCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAG;AAHG,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAErC,QAAM,CAACL,UAAD,EAAaM,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMU,aAAa,GAAG,MAAM;AACxBD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;AACH,GAHD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACvBJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEH,GAHD;;AAKA,sBAAQ,QAAC,WAAD,CAAa,QAAb;AACG,IAAA,KAAK,EAAE;AAAEN,MAAAA,UAAU,EAAEA,UAAd;AAA0BC,MAAAA,QAAQ,EAAEM,aAApC;AAAmDL,MAAAA,OAAO,EAAEQ;AAA5D,KADV;AAAA,cAEKC,MAAM,CAACC;AAFZ;AAAA;AAAA;AAAA;AAAA,UAAR;AAKH,CAlBM;;GAAMP,mB;;KAAAA,mB;AAoBb,eAAeP,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n    onLogout: () => { },\n    onLogin: (email, password) => { }\n});\n\nexport const AuthContextProvider = () => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    const logoutHandler = () => {\n        setIsLoggedIn(false);\n        localStorage.removeItem('isLoggedIn');\n    };\n    const loginHandler = () => {\n        setIsLoggedIn(true);\n\n    };\n\n    return (<AuthContext.Provider\n               value={{ isLoggedIn: isLoggedIn, onLogout: logoutHandler, onLogin: loginHandler }} >\n                {prompt.children}\n            </AuthContext.Provider>\n    );\n};\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}