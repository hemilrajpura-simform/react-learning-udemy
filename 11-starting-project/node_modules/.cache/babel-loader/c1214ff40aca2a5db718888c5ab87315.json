{"ast":null,"code":"var _jsxFileName = \"/home/hemilrajpura/React Training - Dec 2021/Course 9 -React Course/11-starting-project/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setenteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setenteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('name input is valid');\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = () => {\n    setenteredNameTouched(true);\n  };\n\n  const formSubmissionChangeHandler = event => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setenteredNameIsValid(false);\n      return;\n    }\n\n    setenteredNameIsValid(true);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); // nameInputRef.current.value =''; not ideal\n\n    setEnteredName('');\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionChangeHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredName,\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef,\n        onBlur: nameInputBlurHandler,\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"fJ8LqQ8V+svBaa/BplhjEh6baUk=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/hemilrajpura/React Training - Dec 2021/Course 9 -React Course/11-starting-project/src/components/SimpleInput.js"],"names":["useState","useRef","useEffect","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setenteredNameIsValid","enteredNameTouched","setenteredNameTouched","console","log","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionChangeHandler","preventDefault","trim","enteredValue","current","nameInputIsInvalid","nameInputClasses"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACU,kBAAD,EAAqBC,qBAArB,IAA8CX,QAAQ,CAAC,KAAD,CAA5D;AAEAE,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGM,kBAAH,EAAsB;AACpBI,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF,GAJQ,EAIP,CAACL,kBAAD,CAJO,CAAT;;AAOA,QAAMM,sBAAsB,GAAGC,KAAK,IAAI;AACtCR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAI;AAC/BP,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFD;;AAIA,QAAMQ,2BAA2B,GAAGJ,KAAK,IAAI;AAC3CA,IAAAA,KAAK,CAACK,cAAN;AACAT,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAIL,WAAW,CAACe,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BZ,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AACDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AAIA,UAAMa,YAAY,GAAGjB,YAAY,CAACkB,OAAb,CAAqBN,KAA1C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYS,YAAZ,EAZ2C,CAc3C;;AACAf,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAhBD;;AAiBA,QAAMiB,kBAAkB,GAAG,CAAChB,kBAAD,IAAuBE,kBAAlD;AAEA,QAAMe,gBAAgB,GAAGD,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;AAEA,sBAEE;AAAM,IAAA,QAAQ,EAAEL,2BAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEM,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,KAAK,EAAEnB,WADP;AAEC,QAAA,IAAI,EAAC,MAFN;AAEa,QAAA,EAAE,EAAC,MAFhB;AAGA,QAAA,GAAG,EAAED,YAHL;AAIA,QAAA,MAAM,EAAEa,oBAJR;AAKA,QAAA,QAAQ,EAAEJ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF,EAQGU,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAkBD,CA7DD;;GAAMrB,W;;KAAAA,W;AA+DN,eAAeA,WAAf","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setenteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setenteredNameTouched] = useState(false);\n\n  useEffect(()=>{\n    if(enteredNameIsValid){\n      console.log('name input is valid');\n    }\n  },[enteredNameIsValid]\n  );\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = ()=>{\n    setenteredNameTouched(true);\n  };\n\n  const formSubmissionChangeHandler = event => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n    if (enteredName.trim() === '') {\n      setenteredNameIsValid(false);\n      return;\n    }\n    setenteredNameIsValid(true);\n\n\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    // nameInputRef.current.value =''; not ideal\n    setEnteredName('');\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n\n    <form onSubmit={formSubmissionChangeHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        value={enteredName}\n         type='text' id='name'\n        ref={nameInputRef}\n        onBlur={nameInputBlurHandler}\n        onChange={nameInputChangeHandler} />\n        {nameInputIsInvalid && <p className='error-text'>Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}